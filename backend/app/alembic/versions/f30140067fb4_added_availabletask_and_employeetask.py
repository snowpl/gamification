"""Added AvailableTask and EmployeeTask

Revision ID: f30140067fb4
Revises: e6d087adb6cf
Create Date: 2025-01-21 09:16:35.677553

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'f30140067fb4'
down_revision = 'e6d087adb6cf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('availabletask',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('requires_approval', sa.Boolean(), nullable=False),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('department_xp', sa.Integer(), nullable=False),
    sa.Column('skill_xp', sa.Integer(), nullable=False),
    sa.Column('company_xp', sa.Integer(), nullable=False),
    sa.Column('person_xp', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('department_id', sa.Uuid(), nullable=False),
    sa.Column('skill_id', sa.Uuid(), nullable=False),
    sa.Column('company_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('employeetask', sa.Column('task_id', sa.Uuid(), nullable=False))
    op.add_column('employeetask', sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('employeetask', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.alter_column('employeetask', 'assigned_to_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint('employeetask_department_id_fkey', 'employeetask', type_='foreignkey')
    op.drop_constraint('employeetask_skill_id_fkey', 'employeetask', type_='foreignkey')
    op.drop_column('employeetask', 'skill_xp')
    op.drop_column('employeetask', 'description')
    op.drop_column('employeetask', 'department_xp')
    op.drop_column('employeetask', 'person_xp')
    op.drop_column('employeetask', 'requires_approval')
    op.drop_column('employeetask', 'skill_id')
    op.drop_column('employeetask', 'company_xp')
    op.drop_column('employeetask', 'department_id')
    op.drop_column('employeetask', 'title')
    op.drop_column('employeetask', 'approved')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('employeetask', sa.Column('approved', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('employeetask', sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('employeetask', sa.Column('department_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('employeetask', sa.Column('company_xp', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('employeetask', sa.Column('skill_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('employeetask', sa.Column('requires_approval', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('employeetask', sa.Column('person_xp', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('employeetask', sa.Column('department_xp', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('employeetask', sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('employeetask', sa.Column('skill_xp', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('employeetask_skill_id_fkey', 'employeetask', 'skill', ['skill_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('employeetask_department_id_fkey', 'employeetask', 'department', ['department_id'], ['id'], ondelete='CASCADE')
    op.alter_column('employeetask', 'assigned_to_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('employeetask', 'created_at')
    op.drop_column('employeetask', 'status')
    op.drop_column('employeetask', 'task_id')
    op.drop_table('availabletask')
    # ### end Alembic commands ###
